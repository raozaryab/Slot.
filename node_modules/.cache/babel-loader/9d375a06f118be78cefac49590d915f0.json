{"ast":null,"code":"var _jsxFileName = \"F:\\\\slotApp\\\\slotapp\\\\src\\\\SlotM.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SlotM = props => {\n  let {\n    x,\n    y,\n    z\n  } = props;\n\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-slot\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is matching...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-slot\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is Not matching...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c = SlotM;\nexport default SlotM;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlotM\");","map":{"version":3,"sources":["F:/slotApp/slotapp/src/SlotM.jsx"],"names":["React","SlotM","props","x","y","z"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAIA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAGrB,MAAI;AAAEC,IAAAA,CAAF;AAAKC,IAAAA,CAAL;AAAQC,IAAAA;AAAR,MAAcH,KAAlB;;AAGA,MAAKC,CAAC,KAAKC,CAAP,IAAcA,CAAC,KAAKC,CAAxB,EAA4B;AACxB,wBACI;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA,qBAAKF,CAAL,OAASC,CAAT,OAAaC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,qBADJ;AAUH,GAXD,MAYK;AACD,wBACI;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA,qBAAKF,CAAL,OAASC,CAAT,OAAaC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,qBADJ;AAWH;AAEJ,CAhCD;;KAAMJ,K;AAmCN,eAAeA,KAAf","sourcesContent":["\r\nimport React from 'react';\r\n\r\n\r\n\r\nconst SlotM = (props) => {\r\n\r\n\r\n    let { x, y, z } = props\r\n\r\n\r\n    if ((x === y) && (y === z)) {\r\n        return (\r\n            <>\r\n\r\n                <div className=\"inner-slot\">\r\n                    <h1>{x} {y} {z}</h1>\r\n                    <h1>This is matching...</h1>\r\n                </div>\r\n            </>\r\n\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n\r\n                <div className=\"inner-slot\">\r\n                    <h1>{x} {y} {z}</h1>\r\n                    <h1>This is Not matching...</h1>\r\n                </div>\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default SlotM;"]},"metadata":{},"sourceType":"module"}